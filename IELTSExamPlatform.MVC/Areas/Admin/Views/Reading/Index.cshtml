@using IELTSExamPlatform.BL.DTOs.Reading.GET
@model List<ReadingDto>

@{
    ViewData["Title"] = "Reading List";
}

<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Reading List</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Readings</h6>
            <a asp-controller="Reading" asp-action="Create" class="btn btn-sm btn-primary">
                <i class="fas fa-plus"></i> Create
            </a>
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="readingsTable">
                    <thead class="thead-light">
                        <tr>
                            <th>#</th>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Count; i++)
                        {
                            var reading = Model[i];
                            <tr>
                                <td>@reading.Id</td>
                                <td>@reading.ReadingPassages.FirstOrDefault()?.Title </td>
                                <td>@reading.ReadingPassages.FirstOrDefault()?.Description</td>
                                <td>
                                    <button class="btn btn-sm btn-info view-reading-btn"
                                            data-reading-index="@i">
                                        <i class="fas fa-eye"></i> View
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="readingModal" tabindex="-1" aria-labelledby="readingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="readingModalLabel">
                    <i class="fas fa-book-open me-2"></i>Reading Content
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body bg-light">
                <div id="readingModalContent">
                    <!-- Reading content will be populated here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .passage-container {
            transition: all 0.3s ease;
        }
        .key-badge {
            font-size: 0.9rem;
            min-width: 2rem;
            text-align: center;
        }
        .paragraph-text p {
            line-height: 1.6;
            color: #333;
        }
        .passage-header h5 {
            color: #495057;
        }
        .reading-content {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .paragraph-with-key, .paragraph-no-key {
            background-color: #f8f9fa;
            padding: 1rem;
            border-left: 3px solid #dee2e6;
        }
        .paragraph-with-key {
            border-bottom: 1px solid #e9ecef;
        }
    </style>
    <script>
        const readings = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));

        const modal = new bootstrap.Modal(document.getElementById('readingModal'));
        const modalContent = document.getElementById('readingModalContent');

        document.querySelectorAll('.view-reading-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const index = btn.getAttribute('data-reading-index');
                const reading = readings[index];

                let html = '<div class="reading-content">';
                
                reading.ReadingPassages.forEach((passage, passageIndex) => {
                    html += `
                        <div class="passage-container border rounded mb-4 pb-3">
                            <div class="passage-header bg-light p-3 border-bottom">
                                <h5 class="mb-1">
                                    <span class="badge bg-primary me-2">#${passageIndex + 1}</span>
                                    ${passage.Title || 'Untitled Passage'}
                                </h5>
                                ${passage.Description ? `<p class="text-muted mb-0"><small>${passage.Description}</small></p>` : ''}
                            </div>
                            
                            <div class="passage-content p-3">
                                ${passage.ReadingParagrahs.map(paragraph => `
                                    ${paragraph.Key ? `
                                        <div class="paragraph-with-key mb-3">
                                            <div class="key-content-row d-flex align-items-start">
                                                <span class="key-badge badge bg-secondary me-3 align-self-start">${paragraph.Key}</span>
                                                <div class="paragraph-text">
                                                    <p class="mb-0 text-justify">${paragraph.Content}</p>
                                                </div>
                                            </div>
                                        </div>
                                    ` : `
                                        <div class="paragraph-no-key mb-3">
                                            <p class="mb-0 text-justify">${paragraph.Content}</p>
                                        </div>
                                    `}
                                `).join('')}
                            </div>
                        </div>
                    `;
                });
                
                html += '</div>';

                modalContent.innerHTML = html;
                modal.show();
            });
        });
    </script>
}
